#!/usr/bin/env zsh

[[ -z $CONFIGURATION ]] || { echo "RUNNINGINXCODE=yes" && exit 0 }
	
x="$(pwd)"

while [ -d "$x" -a "$x" != "/" ]; do
  PROJ="$(ls -d $x/*.xc*(/) | head -n1)"
	PROJ=${PROJ/$(pwd)\//}
  # x="${x:t}"
  [[ -z "$PROJ" ]] && >&2 echo "Project: $PROJ" || break
done


[[ "$@" =~ "(-h|-help|--h|--help)" ]] && { 
	echo "Sources xcode env from current folder.  USAGE: . <( $(basename $0) )"
	tput setaf 3
	echo "PROJ is '$PROJ'. Scheme is '$SCHEME'.  Working dir is '$x'"
	tput sgr0
	exit 0
} 

SCHEME="${1:-${${x:a}:t}}" # if $1 use that as scheme, otherise use the current directory name

IFS='
'

for x in $(xcodebuild -showBuildSettings -hideShellScriptEnvironment -scheme $SCHEME | grep =)
do
	echo "$x" | sed 's/^[ \t]*//' | sed 's/ = /=/g'
	 
	# | sed 's/^ *//;s/\"/\\\"/g;s/ = \(.*\)/=\"\1\"/;s/ = /=/;s/UID.*//'
done


# tput setaf 4
# echo "PROJ is '$PROJ'. Scheme is '$SCHEME'.  Working dir is '$x'"
# tput sgr0

#WHERE="$(pwd)"


# look for Xcode proj/workspace in current dir, go up until found

#FINDIT() { find "$1" -maxdepth 1 | egrep '\.xcodeproj$' }  # '\.xcodeproj$|\.xcworkspace$' }

#while [ -d "$WHERE"  -a -z "${PROJ=$(FINDIT $WHERE)}" ]; do WHERE="$WHERE/.."; done

# >&2

# exit 0


# TO_EVAL="$(xcodebuild -showBuildSettings -scheme $SCHEME | grep -v 'Build settings') 2> /dev/null | sed '1d;s/^ *//;s/\"/\\\"/g;s/ = \(.*\)/=\"\1\"/;s/ = /=/;s/UID.*//'| grep '=' | grep -v GID)"

# echo "sourcing... ${#${TO_EVAL}} items."

# "\n\n$(echo ${TO_EVAL[#]}|wc -l)"

# "

# for x in $TO_EVAL; {
 
 # echo "exporting $x"

# }

# while read x; do

  # echo "exporting $x"
  # [[ -z "$x" ]] || export "$x"

# done <<< "$TO_EVAL"


#TMPFILE="/tmp/xcodebuild-env.tmp"
# SCRIPT=`grealpath $0`
# SCRIPTPATH=`dirname $SCRIPT`
# -configuration Debug

#ls ./*(.xcodeproj|.xcworkspace) 1> /dev/null
